name: Deployment

on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Test api
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Install dependencies
        run: |
          cd api
          npm ci
      - name: Run test
        run: |
          cd api
          npm run ava

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and push Docker images
        env:
          CR_PAT: ${{ secrets.DEPLOY_TOKEN }}
        run: |
          cd ${{ github.workspace }}
          docker-compose build
          echo ${{ secrets.PAT }} | docker login ghcr.io -u rjcfer --password-stdin
          docker push ghcr.io/rjcfer/api:latest
          docker push ghcr.io/rjcfer/frontend:latest

  deploy-to-server:
    runs-on: ubuntu-latest
    needs: [build, tests]
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo ${{ secrets.PAT }} | docker login ghcr.io -u rjcfer --password-stdin
            docker-compose down
            docker rm -f testunitairecours-api-1 db testunitairecours-frontend-1
            docker pull ghcr.io/rjcfer/frontend:latest
            docker pull ghcr.io/rjcfer/api:latest
            docker-compose up -d
            docker cp config ricardo-api-1:/config
